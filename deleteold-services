pipeline {
    agent any

    parameters {
        string(name: 'AWS_ACCOUNT_ID', description: 'AWS Account ID to operate in')
        string(name: 'AWS_REGION', defaultValue: 'us-east-1', description: 'AWS Region to operate in')
        string(name: 'INSTANCE_ID', description: 'EC2 Instance ID to delete')
    }

    stages {
        stage('Validate EC2 Instance ID') {
            steps {
                script {
                    try {
                        echo "Validating EC2 instance ID: ${params.INSTANCE_ID} in AWS Region: ${params.AWS_REGION}"

                        // Check if the provided instance ID exists
                        def describeInstanceResult = sh(script: """
                            aws ec2 describe-instances --instance-ids ${params.INSTANCE_ID} --region ${params.AWS_REGION} \
                            --query "Reservations[].Instances[].[InstanceId]" --output text
                        """, returnStdout: true).trim()

                        // If the describe-instances result is empty, it means the instance does not exist
                        if (describeInstanceResult == "") {
                            error "Invalid instance ID: ${params.INSTANCE_ID}. No such instance exists in the provided region."
                        } else {
                            echo "Instance ID ${params.INSTANCE_ID} is valid and exists."
                        }
                    } catch (Exception e) {
                        echo "Error: ${e.getMessage()}"
                        currentBuild.result = 'FAILURE'
                        error "Pipeline stopped due to invalid instance ID."
                    }
                }
            }
        }

        stage('Terminate EC2 Instance') {
            steps {
                script {
                    try {
                        echo "Attempting to terminate EC2 instance: ${params.INSTANCE_ID} in AWS Region: ${params.AWS_REGION}"

                        // Attempt to terminate the EC2 instance
                        def terminateResult = sh(script: """
                            aws ec2 terminate-instances --instance-ids ${params.INSTANCE_ID} --region ${params.AWS_REGION} \
                            --query 'TerminatingInstances[0].InstanceId' --output text
                        """, returnStdout: true).trim()

                        // Check if the instance termination was successful
                        if (terminateResult == params.INSTANCE_ID) {
                            echo "Successfully initiated termination of EC2 instance: ${params.INSTANCE_ID}"
                        } else {
                            error "Failed to terminate EC2 instance: ${params.INSTANCE_ID}. Please check the instance ID or region."
                        }
                    } catch (Exception e) {
                        echo "Error: ${e.getMessage()}"
                        currentBuild.result = 'FAILURE'
                        error "Error terminating the EC2 instance."
                    }
                }
            }
        }
    }

    post {
        failure {
            echo 'The pipeline failed!'
        }
        success {
            echo 'EC2 instance deletion completed successfully.'
        }
    }
}
